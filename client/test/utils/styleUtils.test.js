import {isColor} from '../../src/utils/styleUtils'

describe('The styleUtils isColor function', function(){
  describe('detects valid input colors', function(){
    const CSS_COLOR_NAMES = [
      'AliceBlue',
      'AntiqueWhite',
      'Aqua',
      'Aquamarine',
      'Azure',
      'Beige',
      'Bisque',
      'Black',
      'BlanchedAlmond',
      'Blue',
      'BlueViolet',
      'Brown',
      'BurlyWood',
      'CadetBlue',
      'Chartreuse',
      'Chocolate',
      'Coral',
      'CornflowerBlue',
      'Cornsilk',
      'Crimson',
      'Cyan',
      'DarkBlue',
      'DarkCyan',
      'DarkGoldenRod',
      'DarkGray',
      'DarkGrey',
      'DarkGreen',
      'DarkKhaki',
      'DarkMagenta',
      'DarkOliveGreen',
      'Darkorange',
      'DarkOrchid',
      'DarkRed',
      'DarkSalmon',
      'DarkSeaGreen',
      'DarkSlateBlue',
      'DarkSlateGray',
      'DarkSlateGrey',
      'DarkTurquoise',
      'DarkViolet',
      'DeepPink',
      'DeepSkyBlue',
      'DimGray',
      'DimGrey',
      'DodgerBlue',
      'FireBrick',
      'FloralWhite',
      'ForestGreen',
      'Fuchsia',
      'Gainsboro',
      'GhostWhite',
      'Gold',
      'GoldenRod',
      'Gray',
      'Grey',
      'Green',
      'GreenYellow',
      'HoneyDew',
      'HotPink',
      'IndianRed',
      'Indigo',
      'Ivory',
      'Khaki',
      'Lavender',
      'LavenderBlush',
      'LawnGreen',
      'LemonChiffon',
      'LightBlue',
      'LightCoral',
      'LightCyan',
      'LightGoldenRodYellow',
      'LightGray',
      'LightGrey',
      'LightGreen',
      'LightPink',
      'LightSalmon',
      'LightSeaGreen',
      'LightSkyBlue',
      'LightSlateGray',
      'LightSlateGrey',
      'LightSteelBlue',
      'LightYellow',
      'Lime',
      'LimeGreen',
      'Linen',
      'Magenta',
      'Maroon',
      'MediumAquaMarine',
      'MediumBlue',
      'MediumOrchid',
      'MediumPurple',
      'MediumSeaGreen',
      'MediumSlateBlue',
      'MediumSpringGreen',
      'MediumTurquoise',
      'MediumVioletRed',
      'MidnightBlue',
      'MintCream',
      'MistyRose',
      'Moccasin',
      'NavajoWhite',
      'Navy',
      'OldLace',
      'Olive',
      'OliveDrab',
      'Orange',
      'OrangeRed',
      'Orchid',
      'PaleGoldenRod',
      'PaleGreen',
      'PaleTurquoise',
      'PaleVioletRed',
      'PapayaWhip',
      'PeachPuff',
      'Peru',
      'Pink',
      'Plum',
      'PowderBlue',
      'Purple',
      'Red',
      'RosyBrown',
      'RoyalBlue',
      'SaddleBrown',
      'Salmon',
      'SandyBrown',
      'SeaGreen',
      'SeaShell',
      'Sienna',
      'Silver',
      'SkyBlue',
      'SlateBlue',
      'SlateGray',
      'SlateGrey',
      'Snow',
      'SpringGreen',
      'SteelBlue',
      'Tan',
      'Teal',
      'Thistle',
      'Tomato',
      'Turquoise',
      'Violet',
      'Wheat',
      'White',
      'WhiteSmoke',
      'Yellow',
      'YellowGreen',
    ]
    const HEX_COLORS = [
      '#123ABC',
      '#123',
      '#111',
      '#AAA',
      ' #A9D ',
      ' #123ABC',
      '#123 ',
      '#111  ',
      '   #AAA',
      '  #A9D  ',
    ]
    const RGB_COLORS = [
      'rgb(1,2,3)',
      'rgb(255,255,255)',
      'rgb(0,0,0)',
      'rgba(1,2,3,0.1)',
      'rgba(255,255,255,0.4)',
      'rgba(0,0,0,1)',
      'rgb(1,  2,  3)',
      'rgb(255,  255,  255)  ',
      'rgb(0,  0,  0)',
      '  rgba(1,  2,  3,  0.1)',
      'rgba(255,  255,  255,0.4)',
      'rgba(0,0, 0,  1)',
      'rgb(1, 2, 3)',
      'rgb(255, 255, 255)',
      'rgb(0, 0, 0)',
      ' rgba(1, 2, 3, 0.1) ',
      'rgba(255, 255, 255, 0.4)',
      'rgba(0, 0, 0, 1)',
      'rgba(    1,  2,  3)',
    ]
    const valid_colors = CSS_COLOR_NAMES.concat(
      CSS_COLOR_NAMES.map(c => c.toLowerCase())
    )
      .concat(CSS_COLOR_NAMES.map(c => c.toUpperCase()))
      .concat(HEX_COLORS)
      .concat(RGB_COLORS)
    valid_colors.forEach(c => {
      it(`isColor(\`${c}\`)`, function(){
        expect(isColor(c)).toBeTruthy()
      })
    })
  })
  describe('detects invalid input colors', function(){
    const invalid_colors = [
      'FluorescentMagenta',
      'uhOh',
      '#123GGG',
      '#9090909',
      '#1',
      '#1A',
      'rgb(256, 0, 0)',
      'rgba(0, 0, 0, 100)',
      'rgb(25, 0, -1)',
      'rgba(0, -30, 0, 0)',
    ]
    let failures = []
    invalid_colors.forEach(c => {
      it(`isColor(\`${c}\`)`, function(){
        expect(isColor(c)).toBeFalsy()
      })
    })
  })
  describe('detects other non-colors', function(){
    it(`null is not a color`, function(){
      expect(isColor(null)).toBeFalsy()
    })
    it(`undefined is not a color`, function(){
      expect(isColor(undefined)).toBeFalsy()
    })
  })
})
